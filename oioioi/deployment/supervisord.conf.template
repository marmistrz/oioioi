[supervisord]
logfile={{ PROJECT_DIR }}/logs/supervisor.log
pidfile={{ PROJECT_DIR }}/pidfiles/supervisor.pid
childlogdir={{ PROJECT_DIR }}/logs
user=__USER__
directory={{ PROJECT_DIR }}
identifier=oioioi-supervisor

[program:uwsgi]
{% if settings.UWSGI_USE_GEVENT %}
command=uwsgi -s {{ PROJECT_DIR }}/uwsgi.sock --umask=000 --loop=gevent --async=50 --processes=10 -M --max-requests=5000 --disable-logging --need-app --enable-threads --socket-timeout=30 --wsgi-file={{ PROJECT_DIR }}/wsgi.py
{% else %}
command=uwsgi -s {{ PROJECT_DIR }}/uwsgi.sock --umask=000 --processes=10 -M --max-requests=5000 --disable-logging --need-app --enable-threads --socket-timeout=30 --wsgi-file={{ PROJECT_DIR }}/wsgi.py
{% endif %}
stopsignal=INT
startretries=0
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/uwsgi.log
{% if settings.UWSGI_ENABLED == False %}exclude=true{% elif settings.UWSGI_ENABLED == 'auto' and settings.DEBUG %}exclude=true{% endif %}

[program:celerycam]
command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py celerycam --pidfile={{ PROJECT_DIR }}/pidfiles/celerycam.pid
startretries=0
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/celerycam.log

[program:rankingsd]
command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py rankingsd
startretries=0
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/rankingsd.log

[program:mailnotifyd]
command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py mailnotifyd
startretries=0
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/mailnotifyd.log

[program:unpackmgr]
command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py celeryd -E -l info -Q unpackmgr -c {{ settings.UNPACKMGR_CONCURRENCY }}
startretries=0
stopwaitsecs=15
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/unpackmgr.log

[program:evalmgr]
command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py celeryd -E -l info -Q evalmgr -c {{ settings.EVALMGR_CONCURRENCY }}
startretries=0
stopwaitsecs=15
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/evalmgr.log

[program:evalmgr-zeus]
command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py celeryd -E -l info -Q evalmgr-zeus -c 1
startretries=0
stopwaitsecs=15
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/evalmgr-zeus.log
{% if not settings.ZEUS_INSTANCES %}exclude=true{% endif %}

[program:prizesmgr]
command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py celeryd -E -l info -Q prizesmgr -c 1
startretries=0
stopwaitsecs=15
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/prizesmgr.log
{% if 'oioioi.prizes' not in settings.INSTALLED_APPS %}exclude=true{% endif %}

[program:sioworkers]
command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py celeryd -E -l info -Q sioworkers -c 1
startretries=0
stopwaitsecs=15
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/sioworkers.log
{% if not settings.RUN_LOCAL_WORKERS or settings.SIOWORKERS_BACKEND != 'oioioi.sioworkers.backends.CeleryBackend' %}exclude=true{% endif %}

[program:filetracker-server]
command=filetracker-server -L /dev/stderr -d {{ settings.MEDIA_ROOT }} -l {{ settings.FILETRACKER_LISTEN_ADDR }} -p {{ settings.FILETRACKER_LISTEN_PORT }} -D
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/filetracker.log
{% if not settings.FILETRACKER_SERVER_ENABLED %}exclude=true{% endif %}

[program:notifications-server]
command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py notifications_server
redirect_stderr=true
{% if not settings.NOTIFICATIONS_SERVER_ENABLED %}exclude=true{% endif %}

[program:receive_from_workers]
command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py start_receive_from_workers
startretries=0
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/receive_from_workers.log
{% if settings.SIOWORKERS_BACKEND != 'oioioi.sioworkers.backends.SioworkersdBackend' %}exclude=true{% endif %}

[program:sioworkersd]
command=twistd -n -l- --pidfile={{ PROJECT_DIR }}/pidfiles/sioworkersd.pid sioworkersd --database={{ PROJECT_DIR }}/sioworkersd.sqlite
startretries=0
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/sioworkersd.log
{% if settings.SIOWORKERS_BACKEND != 'oioioi.sioworkers.backends.SioworkersdBackend' or not settings.RUN_SIOWORKERSD %}exclude=true{% endif %}

[program:cleanupd]
command={{ PROJECT_DIR }}/manage.py cleanupd
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/cleanupd.log

[program:ipauthsyncd]
command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py ipauthsyncd
startretries=0
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/ipauthsyncd.log
{% if not 'oioioi.ipauthsync' in settings.INSTALLED_APPS %}exclude=true{% endif %}

[program:ipauth-dnsserver]
command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py ipauth-dnsserver
startretries=0
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/ipauth-dnsserver.log
{% if not settings.IPAUTH_DNSSERVER_DOMAIN %}exclude=true{% endif %}

[program:autoreload]
# Comment this out to enable auto-reloading when code changes.
exclude=true
